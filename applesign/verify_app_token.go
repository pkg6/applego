package applesign

import (
	"context"
	"github.com/pkg6/go-requests"
	"net/url"
)

// AppValidationTokenRequest is based off of https://developer.apple.com/documentation/signinwithapplerestapi/generate_and_validate_tokens
type AppValidationTokenRequest struct {
	// ClientID is the package name of your app
	ClientID string
	// ClientSecret is secret generated as a JSON Web Token that uses the secret key generated by the WWDR portal.
	// It can also be generated using the GenerateClientSecret function provided in this package
	ClientSecret string
	// The authorization code received in an authorization response sent to your app. The code is single-use only and valid for five minutes.
	// Authorization code validation requests require this parameter.
	Code string
}

func VerifyAppToken(ctx context.Context, reqBody AppValidationTokenRequest) (*ValidationTokenResponse, error) {
	resp := new(ValidationTokenResponse)
	data := url.Values{}
	data.Set("client_id", reqBody.ClientID)
	data.Set("client_secret", reqBody.ClientSecret)
	data.Set("code", reqBody.Code)
	data.Set("grant_type", "authorization_code")
	_, err := requests.New().AsForm().PostD(ctx, ValidationURL, data, &resp)
	if err != nil {
		return nil, err
	}
	return resp, nil
}
